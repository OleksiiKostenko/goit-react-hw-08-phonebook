{"version":3,"file":"static/js/408.b18d9ba8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/App/App.module.css?583a","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/PhonebookList.module.css?1d2b","components/Phonebook/PhonebookList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","Page/Contacts.jsx","components/styleComponent/InputStyle.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"App_title__zQTwp\",\"contact_title\":\"App_contact_title__hAO+n\",\"container\":\"App_container__cu9yO\",\"wrapp\":\"App_wrapp__knbWP\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, setFilter } from 'redux/Contacts/filterSlice';\nimport { CssTextField } from 'components/styleComponent/InputStyle';\n\nexport const Filter = () => {\n  const distpatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const filterContacts = evt => {\n    const value = evt.target.value;\n    distpatch(setFilter(value));\n  };\n\n  return (\n    <CssTextField\n      fullWidth\n      label=\"Find contacts by name\"\n      variant=\"standard\"\n      type=\"text\"\n      value={filter}\n      name=\"filter\"\n      onChange={filterContacts}\n      sx={{\n        width: 300,\n        '& .MuiInputLabel-root': { color: 'white' },\n        borderBottom: '1px solid white',\n        '& .MuiInputBase-root': {\n          color: 'white',\n        },\n      }}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list_item\":\"PhonebookList_list_item__MjrOl\",\"list_el\":\"PhonebookList_list_el__wH9xw\",\"list_btn\":\"PhonebookList_list_btn__c4mtH\",\"list_title\":\"PhonebookList_list_title__lZXyc\"};","import css from '../Phonebook/PhonebookList.module.css';\nimport { Button } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/Contacts/filterSlice';\nimport { getContacts } from 'redux/Contacts/contactsSlice';\nimport { deleteContact } from 'redux/Contacts/contatcOperation';\n\nexport const PhonebookList = () => {\n  const distpatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <ul className={css.list_item}>\n      {filteredList.map(({ id, name, number }) => (\n        <li className={css.list_el} key={id}>\n          <p className={css.list_title}>\n            {name}:{number}\n          </p>\n          <Button\n            sx={{ mr: 2 }}\n            onClick={() => distpatch(deleteContact(id))}\n            type=\"button\"\n            variant=\"contained\"\n            size=\"small\"\n            color=\"secondary\"\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\"};","import React from 'react';\nimport css from '../Form/Form.module.css';\nimport { Button } from '@mui/material';\nimport { CssTextField } from 'components/styleComponent/InputStyle';\nimport { useInputContex } from '../../hooks/Context';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/Contacts/contactsSlice';\nimport { addContact } from 'redux/Contacts/contatcOperation';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst FormElement = () => {\n  const { nameValue, addName, numberValue, addNumber } = useInputContex();\n\n  const contacts = useSelector(getContacts);\n  const distpatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const names = contacts.map(contact => contact.name);\n\n    if (names.includes(nameValue)) {\n      alert(`${nameValue}is already in contacts.`);\n      return;\n    }\n    addContact(\n      distpatch(\n        addContact({\n          id: nanoid(),\n          name: nameValue,\n          number: numberValue,\n        })\n      )\n    );\n    reset();\n  };\n\n  const reset = () => {\n    addName('');\n    addNumber('');\n  };\n\n  return (\n    <form className={css.form} autoComplete=\"off\" onSubmit={handleSubmit}>\n      <CssTextField\n        fullWidth\n        label=\"Name\"\n        variant=\"standard\"\n        type=\"text\"\n        value={nameValue}\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={e => addName(e.target.value)}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        sx={{\n          width: 300,\n          '& .MuiInputLabel-root': { color: 'white' },\n          borderBottom: '1px solid white',\n          '& .MuiInputBase-root': {\n            color: 'white',\n          },\n        }}\n      />\n      <CssTextField\n        fullWidth\n        label=\"Number\"\n        variant=\"standard\"\n        type=\"tel\"\n        name=\"number\"\n        value={numberValue}\n        onChange={e => addNumber(e.target.value)}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        sx={{\n          width: 300,\n          '& .MuiInputLabel-root': { color: 'white' },\n          borderBottom: '1px solid white',\n          '& .MuiInputBase-root': {\n            color: 'white',\n          },\n        }}\n      />\n      <Button\n        sx={{ mt: 2 }}\n        color=\"secondary\"\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n      >\n        Add Contact\n      </Button>\n    </form>\n  );\n};\n\nexport default FormElement;\n","import React, { useEffect } from 'react';\nimport css from '../components/App/App.module.css';\nimport { Filter } from 'components/Filter/Filter';\nimport { PhonebookList } from 'components/Phonebook/PhonebookList';\nimport FormElement from 'components/Form/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/contatcOperation';\nimport { getContacts } from 'redux/Contacts/contactsSlice';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <div className={css.wrapp}>\n        <h1 className={css.title}>Phonebook</h1>\n        <FormElement />\n      </div>\n\n      <div className={css.wrapp}>\n        {contacts.length > 0 && <h2 className={css.contact_title}>Contacts</h2>}\n        {contacts.length > 0 && <PhonebookList />}\n        {contacts.length > 1 && <Filter />}\n      </div>\n    </div>\n  );\n}\n\nexport default Contacts;\n","import { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\n\nexport const CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'white',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'white',\n  },\n});\n"],"names":["Filter","distpatch","useDispatch","filter","useSelector","getFilter","fullWidth","label","variant","type","value","name","onChange","evt","target","setFilter","sx","width","color","borderBottom","PhonebookList","contacts","getContacts","normalizedFilter","toLowerCase","filteredList","contact","includes","className","css","map","id","number","Button","mr","onClick","deleteContact","size","useInputContex","nameValue","addName","numberValue","addNumber","reset","autoComplete","onSubmit","preventDefault","alert","addContact","nanoid","title","required","e","pattern","mt","dispatch","useEffect","fetchContacts","Form","length","CssTextField","styled","TextField","borderBottomColor"],"sourceRoot":""}